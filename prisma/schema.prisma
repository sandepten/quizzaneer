// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId], name: "userId")
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId], name: "userId")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    games         Game[]
}

enum GameType {
    MCQ
    OPEN
}

model Game {
    id        String     @id @default(cuid())
    topic     String
    type      GameType
    userId    String
    user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt DateTime   @default(now())
    questions Question[]

    @@index([userId], name: "userId")
}

model Question {
    id                String   @id @default(cuid())
    question          String
    answer            String
    options           Json? // only for MCQ
    percentageCorrect Float? // only for OPEN
    type              GameType
    userAnswer        String?
    isCorrect         Boolean? // only for MCQ
    gameId            String
    game              Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
    createdAt         DateTime @default(now())

    @@index([gameId], name: "gameId")
}
